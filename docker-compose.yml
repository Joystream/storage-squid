version: '3'

services:
  squid_db:
    container_name: squid_db
    hostname: squid-db
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_DB: squid
      POSTGRES_PASSWORD: squid
    networks:
      - joystream
    ports:
      - '${DB_PORT}:${DB_PORT}'
    command: ['postgres', '-c', 'config_file=/etc/postgresql/postgresql.conf', '-p', '${DB_PORT}']
    shm_size: 1g
    volumes:
      - squid_db_data:/var/lib/postgresql/data
      - ./db/postgres.conf:/etc/postgresql/postgresql.conf

  squid_processor:
    container_name: squid_processor
    hostname: squid-processor
    image: node:18
    restart: unless-stopped
    env_file:
      - .env
      - .docker.env
    ports:
      - '127.0.0.1:${PROCESSOR_PROMETHEUS_PORT}:${PROCESSOR_PROMETHEUS_PORT}'
      - '[::1]:${PROCESSOR_PROMETHEUS_PORT}:${PROCESSOR_PROMETHEUS_PORT}'
    networks:
      - joystream
    depends_on:
      - squid_db
    volumes:
      - type: bind
        source: .
        target: /storage-squid
    working_dir: /storage-squid
    command: ['make', 'process']

  squid_graphql-server:
    container_name: squid_graphql-server
    hostname: squid-graphql-server
    image: node:18
    restart: unless-stopped
    env_file:
      - .env
      - .docker.env
    environment:
      - SQD_TRACE=authentication
    depends_on:
      - squid_db
    volumes:
      - type: bind
        source: .
        target: /storage-squid
    working_dir: /storage-squid
    command: ['make', 'serve']
    ports:
      - '${GQL_PORT}:${GQL_PORT}'
    networks:
      - joystream

volumes:
  squid_db_data:

    # Join default joystream network (from joystream monorepo docker-compose.yml) to connect will Argus/Colossus nodes
networks:
  joystream:
    external: true
    name: joystream_default
